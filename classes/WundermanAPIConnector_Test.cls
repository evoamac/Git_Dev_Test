@istest
public class WundermanAPIConnector_Test{
 public static testmethod void WundermanAPIConnectorMethod(){
 Campaign cmp = marketingDataUtils.CreateCampaign();
 Campaign_Member_Criteria_Group__c cmpgrp = marketingDataUtils.createCampaignmemgrp(cmp.id);
 Campaign_Member_Criteria__c mem= new Campaign_Member_Criteria__c();
                mem.Campaign__c=cmp.id;
                mem.Exclude__c=true;
                mem.Field_Name__c='Diagnosis_Code__c';
                mem.Value__c='One or more encounters - Patients';
                    insert mem;
   Data_Element_Identifier__c elementidentifier = new Data_Element_Identifier__c();
     elementidentifier.Data_Element_Identifier__c = '13753';
     elementidentifier.Data_Element_Name__c='Diagnosis';
     elementidentifier.Field_Name__c ='Clinical_Code__c';
      insert elementidentifier;
  Tenet_Data_Configuration__c tenet = new Tenet_Data_Configuration__c();
      tenet.Static_Value__c='9900';
      tenet.Name='Page Size';
        insert tenet;
  list<WundermanLogin__c> cslist = new list<WundermanLogin__c>();
     WundermanLogin__c login = new WundermanLogin__c();
      login.EndpointURL__c= 'https://thcintellisight.uat.kbmg.com/IntellisightListAPI/com/wunderman/api/listOrder';
      login.Session_Id__c ='5685179';
      login.Password__c ='tenet1test';
      login.GetSession__c='GetSession.jsp';
      login.Name ='tenettest1';
         insert login;    
      cslist.add(login);
  string listOrderId = '7333';
  string listOrderSelectGroupId ='6778';
  decimal groupLevel = 1;
   string subGroupId ='4555fgf';
   integer pageNumber = 2;
   integer pageSize = 1;
   string valuesCSV = 'jhf';
   string fieldName = 'Clinical_Code__c';
   string valuesMapping = 'value';
   string xmlReponse = '<ROOT><RESULT><RETURNCODE>0</RETURNCODE><MESSAGE>Added Criteria element and values</MESSAGE><LIST_ORDER_CRITERIA_ELMNT_ID>4188725</LIST_ORDER_CRITERIA_ELMNT_ID></RESULT></ROOT>';
   string elementName = 'response';
   String value = 'hj';
   WundermanAPIConnector.WundermanMappingElement wrap = new WundermanAPIConnector.WundermanMappingElement();
   WundermanAPIConnector.WundermanAPIException wrap1 = new WundermanAPIConnector.WundermanAPIException();
   WundermanAPIConnector.WundermanMappingException wrap2 = new WundermanAPIConnector.WundermanMappingException();

   Test.startTest();
       string response='<submitMessageResponseObject><responseCode>0</responseCode><transactionId>1568502965</transactionId><attributes><entry><key>NEW_PERSON_IND</key><value>1</value></entry></attributes><jobId>0</jobId><objects><entry><key>person</key><value xsi:type="ns3:person" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="com.kbmg.remix.api"><address1>239 GRANT ST</address1><attributes/><city>PARK FOREST</city><country>USA</country><dob>11/03/1971</dob><emailAddress>B_2_WILLIAMS@MYEMAILPROVIDER.COM</emailAddress><firstName>BILLY</firstName><id>WDM1223</id><lastName>WILLIAMS</lastName><middleName>D</middleName><objects/><state>IL</state><suffix>III</suffix><telephone>281.777.9311</telephone></value></entry></objects></submitMessageResponseObject>';
      Test.setMock(HttpCalloutMock.class, new MockHttpResponse(response));
  WundermanAPIConnector.addCriteriaToListOrder(listOrderSelectGroupId,mem);
  WundermanAPIConnector.getListOrderInfo(listOrderId);
  WundermanAPIConnector.getListOrderGroupId(listOrderId);
  WundermanAPIConnector.addCriteriaToListOrder(listOrderSelectGroupId,mem,groupLevel);
  WundermanAPIConnector.insertCriteriaToListOrder(listOrderSelectGroupId,mem,groupLevel);
  WundermanAPIConnector.updateCriteriaOfListOrder(mem,groupLevel);
  WundermanAPIConnector.updateCriteriaOfListOrder(mem);
  WundermanAPIConnector.deleteCriteriaFromListOrder(mem);
  WundermanAPIConnector.deleteSubGroupFromListOrder(cmpgrp);
  WundermanAPIConnector.addSubSelectGroupToListOrder(listOrderId);
  WundermanAPIConnector.addExcudeAllGroupToListOrder(listOrderId);
  WundermanAPIConnector.updateGroupOfListOrder(subGroupId);
  WundermanAPIConnector.getListOrderStatus(listOrderId);
  WundermanAPIConnector.placeOrder(listOrderId);
  WundermanAPIConnector.getOrderData(listOrderId,pageNumber);
  WundermanAPIConnector.getOrderData(listOrderId,pageNumber,pageSize );
  WundermanAPIConnector.startNewListOrder();
  WundermanAPIConnector.deleteSubGroupToListOrder(subGroupId);
  WundermanAPIConnector.getValueFromXmlResponse(xmlReponse,elementName);
  WundermanAPIConnector.refreshCount(listOrderId);
  WundermanAPIConnector.addCriteriaToListOrderWithMemType(cmp.id,listOrderSelectGroupId,fieldName,value);
  WundermanAPIConnector.logTransactions();
  WundermanAPIConnector.getValuesFromXmlResponse(xmlReponse);
  Test.stoptest();
 }
}